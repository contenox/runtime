// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/serverapi/tokenizerapi/proto/tokenizerapi.proto

package tokenizerservicepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request for the Tokenize RPC.
type TokenizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"` // The name of the model to use for tokenization.
	Prompt        string                 `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`                        // The text prompt to tokenize.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenizeRequest) Reset() {
	*x = TokenizeRequest{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeRequest) ProtoMessage() {}

func (x *TokenizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeRequest.ProtoReflect.Descriptor instead.
func (*TokenizeRequest) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{0}
}

func (x *TokenizeRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *TokenizeRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

// Response for the Tokenize RPC.
type TokenizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tokens        []int32                `protobuf:"varint,1,rep,packed,name=tokens,proto3" json:"tokens,omitempty"` // The resulting token IDs.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenizeResponse) Reset() {
	*x = TokenizeResponse{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenizeResponse) ProtoMessage() {}

func (x *TokenizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenizeResponse.ProtoReflect.Descriptor instead.
func (*TokenizeResponse) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{1}
}

func (x *TokenizeResponse) GetTokens() []int32 {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// Request for the CountTokens RPC.
type CountTokensRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"` // The name of the model to use for counting tokens.
	Prompt        string                 `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`                        // The text prompt whose tokens are to be counted.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountTokensRequest) Reset() {
	*x = CountTokensRequest{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTokensRequest) ProtoMessage() {}

func (x *CountTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTokensRequest.ProtoReflect.Descriptor instead.
func (*CountTokensRequest) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{2}
}

func (x *CountTokensRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CountTokensRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

// Response for the CountTokens RPC.
type CountTokensResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // The total number of tokens.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountTokensResponse) Reset() {
	*x = CountTokensResponse{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountTokensResponse) ProtoMessage() {}

func (x *CountTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountTokensResponse.ProtoReflect.Descriptor instead.
func (*CountTokensResponse) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{3}
}

func (x *CountTokensResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Response for the AvailableModels RPC.
type AvailableModelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelNames    []string               `protobuf:"bytes,1,rep,name=model_names,json=modelNames,proto3" json:"model_names,omitempty"` // List of available model names.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvailableModelsResponse) Reset() {
	*x = AvailableModelsResponse{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableModelsResponse) ProtoMessage() {}

func (x *AvailableModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableModelsResponse.ProtoReflect.Descriptor instead.
func (*AvailableModelsResponse) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{4}
}

func (x *AvailableModelsResponse) GetModelNames() []string {
	if x != nil {
		return x.ModelNames
	}
	return nil
}

// Request for the OptimalModel RPC.
type OptimalModelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseModel     string                 `protobuf:"bytes,1,opt,name=base_model,json=baseModel,proto3" json:"base_model,omitempty"` // The base model name to find an optimal tokenizer for.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptimalModelRequest) Reset() {
	*x = OptimalModelRequest{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimalModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimalModelRequest) ProtoMessage() {}

func (x *OptimalModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimalModelRequest.ProtoReflect.Descriptor instead.
func (*OptimalModelRequest) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{5}
}

func (x *OptimalModelRequest) GetBaseModel() string {
	if x != nil {
		return x.BaseModel
	}
	return ""
}

// Response for the OptimalModel RPC.
type OptimalModelResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OptimalModelName string                 `protobuf:"bytes,1,opt,name=optimal_model_name,json=optimalModelName,proto3" json:"optimal_model_name,omitempty"` // The name of the optimal tokenizer model found.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OptimalModelResponse) Reset() {
	*x = OptimalModelResponse{}
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimalModelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimalModelResponse) ProtoMessage() {}

func (x *OptimalModelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimalModelResponse.ProtoReflect.Descriptor instead.
func (*OptimalModelResponse) Descriptor() ([]byte, []int) {
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP(), []int{6}
}

func (x *OptimalModelResponse) GetOptimalModelName() string {
	if x != nil {
		return x.OptimalModelName
	}
	return ""
}

var File_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto protoreflect.FileDescriptor

const file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDesc = "" +
	"\n" +
	"8internal/serverapi/tokenizerapi/proto/tokenizerapi.proto\x12\x12tokenizerservicepb\x1a\x1bgoogle/protobuf/empty.proto\"H\n" +
	"\x0fTokenizeRequest\x12\x1d\n" +
	"\n" +
	"model_name\x18\x01 \x01(\tR\tmodelName\x12\x16\n" +
	"\x06prompt\x18\x02 \x01(\tR\x06prompt\"*\n" +
	"\x10TokenizeResponse\x12\x16\n" +
	"\x06tokens\x18\x01 \x03(\x05R\x06tokens\"K\n" +
	"\x12CountTokensRequest\x12\x1d\n" +
	"\n" +
	"model_name\x18\x01 \x01(\tR\tmodelName\x12\x16\n" +
	"\x06prompt\x18\x02 \x01(\tR\x06prompt\"+\n" +
	"\x13CountTokensResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\":\n" +
	"\x17AvailableModelsResponse\x12\x1f\n" +
	"\vmodel_names\x18\x01 \x03(\tR\n" +
	"modelNames\"4\n" +
	"\x13OptimalModelRequest\x12\x1d\n" +
	"\n" +
	"base_model\x18\x01 \x01(\tR\tbaseModel\"D\n" +
	"\x14OptimalModelResponse\x12,\n" +
	"\x12optimal_model_name\x18\x01 \x01(\tR\x10optimalModelName2\x84\x03\n" +
	"\x10TokenizerService\x12U\n" +
	"\bTokenize\x12#.tokenizerservicepb.TokenizeRequest\x1a$.tokenizerservicepb.TokenizeResponse\x12^\n" +
	"\vCountTokens\x12&.tokenizerservicepb.CountTokensRequest\x1a'.tokenizerservicepb.CountTokensResponse\x12V\n" +
	"\x0fAvailableModels\x12\x16.google.protobuf.Empty\x1a+.tokenizerservicepb.AvailableModelsResponse\x12a\n" +
	"\fOptimalModel\x12'.tokenizerservicepb.OptimalModelRequest\x1a(.tokenizerservicepb.OptimalModelResponseBIZGgithub.com/js402/CATE/services/tokenizerapi/tokenizerservicepbb\x06proto3"

var (
	file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescOnce sync.Once
	file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescData []byte
)

func file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescGZIP() []byte {
	file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescOnce.Do(func() {
		file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDesc), len(file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDesc)))
	})
	return file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDescData
}

var file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_goTypes = []any{
	(*TokenizeRequest)(nil),         // 0: tokenizerservicepb.TokenizeRequest
	(*TokenizeResponse)(nil),        // 1: tokenizerservicepb.TokenizeResponse
	(*CountTokensRequest)(nil),      // 2: tokenizerservicepb.CountTokensRequest
	(*CountTokensResponse)(nil),     // 3: tokenizerservicepb.CountTokensResponse
	(*AvailableModelsResponse)(nil), // 4: tokenizerservicepb.AvailableModelsResponse
	(*OptimalModelRequest)(nil),     // 5: tokenizerservicepb.OptimalModelRequest
	(*OptimalModelResponse)(nil),    // 6: tokenizerservicepb.OptimalModelResponse
	(*emptypb.Empty)(nil),           // 7: google.protobuf.Empty
}
var file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_depIdxs = []int32{
	0, // 0: tokenizerservicepb.TokenizerService.Tokenize:input_type -> tokenizerservicepb.TokenizeRequest
	2, // 1: tokenizerservicepb.TokenizerService.CountTokens:input_type -> tokenizerservicepb.CountTokensRequest
	7, // 2: tokenizerservicepb.TokenizerService.AvailableModels:input_type -> google.protobuf.Empty
	5, // 3: tokenizerservicepb.TokenizerService.OptimalModel:input_type -> tokenizerservicepb.OptimalModelRequest
	1, // 4: tokenizerservicepb.TokenizerService.Tokenize:output_type -> tokenizerservicepb.TokenizeResponse
	3, // 5: tokenizerservicepb.TokenizerService.CountTokens:output_type -> tokenizerservicepb.CountTokensResponse
	4, // 6: tokenizerservicepb.TokenizerService.AvailableModels:output_type -> tokenizerservicepb.AvailableModelsResponse
	6, // 7: tokenizerservicepb.TokenizerService.OptimalModel:output_type -> tokenizerservicepb.OptimalModelResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_init() }
func file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_init() {
	if File_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDesc), len(file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_goTypes,
		DependencyIndexes: file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_depIdxs,
		MessageInfos:      file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_msgTypes,
	}.Build()
	File_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto = out.File
	file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_goTypes = nil
	file_internal_serverapi_tokenizerapi_proto_tokenizerapi_proto_depIdxs = nil
}

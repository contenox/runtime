services:
  backend:
    build:
      context: ./
      dockerfile: Dockerfile.core
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_started
      # opensearch:
      #   condition: service_healthy
      # tokenizer:
      #   condition: service_healthy
    ports:
      - "8081:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:8080/api/health || exit 1"]
      interval: 1s
      timeout: 1s
      retries: 20
  tokenizer:
    build:
      context: ./
      dockerfile: Dockerfile.tokenizer
    ports:
      - "50051:50051"
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=localhost:50051"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      - FALLBACK_MODEL=phi-3
      - USE_DEFAULT_URLS=true
      - PRELOAD_MODELS=phi-3
      - ADDR=0.0.0.0:50051
  vald:
    build:
      context: ./
      dockerfile: Dockerfile.vald
    ports:
      - "8082:8081"
  postgres:
    image: postgres:17-bookworm
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username"]
      interval: 5s
      timeout: 5s
      retries:
        10
        # postgres-data:
  nats:
    image: nats:latest
    command: "-js"
    ports:
      - "4222:4222"
      - "8222:8222"
    environment:
      - NATS_USER=natsuser
      - NATS_PASSWORD=natspassword
  text-worker:
    build:
      context: ./
      dockerfile: Dockerfile.worker
    depends_on:
      backend:
        condition: service_healthy
    environment:
      API_BASE_URL: http://backend:8080/api
      WORKER_TYPE: plaintext
      WORKER_EMAIL: worker@example.com
      WORKER_PASSWORD: workerpassword
      WORKER_LEASER_ID: Text Worker 1
      WORKER_LEASE_DURATION_SECONDS: 30
      WORKER_REQUEST_TIMEOUT_SECONDS: 2
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"
    volumes:
      - ollama-data:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
volumes:
  #   postgres-data:
  ollama-data:

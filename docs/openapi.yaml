components:
    schemas:
        array_backendapi_respBackendList:
            items:
                $ref: '#/components/schemas/backendapi_respBackendList'
            type: array
        array_downloadservice_Job:
            items:
                $ref: '#/components/schemas/downloadservice_Job'
            type: array
        array_runtimestate_LLMState:
            items:
                $ref: '#/components/schemas/runtimestate_LLMState'
            type: array
        array_runtimestate_ProviderConfig:
            items:
                $ref: '#/components/schemas/runtimestate_ProviderConfig'
            type: array
        array_runtimetypes_Backend:
            items:
                $ref: '#/components/schemas/runtimetypes_Backend'
            type: array
        array_runtimetypes_Model:
            items:
                $ref: '#/components/schemas/runtimetypes_Model'
            type: array
        array_runtimetypes_Pool:
            items:
                $ref: '#/components/schemas/runtimetypes_Pool'
            type: array
        array_runtimetypes_RemoteHook:
            items:
                $ref: '#/components/schemas/runtimetypes_RemoteHook'
            type: array
        array_string:
            items:
                type: string
            type: array
        backendapi_ListResponse:
            properties:
                data:
                    items:
                        $ref: '#/components/schemas/backendapi_OpenAIModel'
                    type: array
                object:
                    type: string
            type: object
        backendapi_OpenAIModel:
            properties:
                created:
                    type: integer
                id:
                    type: string
                object:
                    type: string
                owned_by:
                    type: string
            type: object
        backendapi_respBackend:
            properties:
                baseUrl:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                error,omitempty:
                    type: string
                id:
                    type: string
                models:
                    items:
                        type: string
                    type: array
                name:
                    type: string
                pulledModels:
                    items:
                        type: object
                    type: array
                type:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
            type: object
        backendapi_respBackendList:
            properties:
                baseUrl:
                    example: http://localhost:11434
                    type: string
                createdAt:
                    example: "2023-01-01T00:00:00Z"
                    format: date-time
                    type: string
                error,omitempty:
                    example: error-message
                    type: string
                id:
                    example: backend-id
                    type: string
                models:
                    items:
                        type: string
                    type: array
                name:
                    example: backend-name
                    type: string
                pulledModels:
                    items:
                        type: object
                    type: array
                type:
                    example: ollama
                    type: string
                updatedAt:
                    example: "2023-01-01T00:00:00Z"
                    format: date-time
                    type: string
            type: object
        downloadservice_Job:
            properties:
                createdAt:
                    format: date-time
                    type: string
                id:
                    type: string
                modelJob:
                    type: object
                scheduledFor:
                    type: integer
                taskType:
                    type: string
                validUntil:
                    type: integer
            type: object
        execapi_DefaultModelResponse:
            properties:
                modelName:
                    type: string
            type: object
        execapi_EmbedRequest:
            properties:
                text:
                    type: string
            type: object
        execapi_EmbedResponse:
            properties:
                vector:
                    items:
                        type: number
                    type: array
            type: object
        execapi_taskExec:
            properties:
                chain:
                    items:
                        $ref: '#/components/schemas/taskengine_ChainDefinition'
                input:
                    type: object
                inputType:
                    type: string
            type: object
        execapi_taskResponse:
            properties:
                output:
                    type: object
                outputType:
                    type: string
                state:
                    items:
                        $ref: '#/components/schemas/taskengine_CapturedStateUnit'
                    type: array
            type: object
        execservice_TaskRequest:
            properties:
                prompt:
                    type: string
            type: object
        execservice_TaskResponse:
            properties:
                id:
                    type: string
                response:
                    type: string
            type: object
        runtimestate_LLMState:
            properties:
                apiKey:
                    description: APIKey stores the API key used for authentication with the backend.
                    type: string
                backend:
                    type: object
                error,omitempty:
                    description: |-
                        Error stores a description of the last encountered error when
                        interacting with or reconciling this backend's state, if any.
                    type: string
                id:
                    type: string
                models:
                    items:
                        type: string
                    type: array
                name:
                    type: string
                pulledModels:
                    items:
                        type: object
                    type: array
            type: object
        runtimestate_ProviderConfig:
            properties:
                APIKey:
                    type: string
                Type:
                    type: string
            type: object
        runtimetypes_Backend:
            properties:
                baseUrl:
                    type: string
                createdAt:
                    format: date-time
                    type: string
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
            type: object
        runtimetypes_Model:
            properties:
                createdAt:
                    format: date-time
                    type: string
                id:
                    type: string
                model:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
            type: object
        runtimetypes_Pool:
            properties:
                createdAt:
                    format: date-time
                    type: string
                id:
                    type: string
                name:
                    type: string
                purposeType:
                    type: string
                updatedAt:
                    format: date-time
                    type: string
            type: object
        runtimetypes_RemoteHook:
            properties:
                createdAt:
                    format: date-time
                    type: string
                endpointUrl:
                    type: string
                id:
                    type: string
                method:
                    type: string
                name:
                    type: string
                timeoutMs:
                    type: integer
                updatedAt:
                    format: date-time
                    type: string
            type: object
        taskengine_CapturedStateUnit:
            properties:
                duration:
                    type: object
                error:
                    type: object
                input:
                    type: string
                inputType:
                    type: object
                output:
                    type: string
                outputType:
                    type: object
                taskHandler:
                    type: string
                taskID:
                    type: string
                transition:
                    type: string
            type: object
        taskengine_ChainDefinition:
            properties:
                debug:
                    description: Enables capturing user input and output.
                    type: boolean
                description:
                    description: Description provides a human-readable summary of the chain's purpose.
                    type: string
                id:
                    description: ID uniquely identifies the chain.
                    type: string
                routing_strategy:
                    description: RoutingStrategy defines how transitions should be evaluated (optional).
                    type: string
                tasks:
                    description: Tasks is the list of tasks to execute in sequence.
                    items:
                        $ref: '#/components/schemas/taskengine_ChainTask'
                    type: array
                token_limit:
                    description: TokenLimit is the token limit for the context window (used during execution).
                    type: integer
            type: object
        taskengine_ChainTask:
            properties:
                compose,omitempty:
                    description: |-
                        Compose merges the specified the output with the withVar side.
                        Optional. compose is applied before the input reaches the task execution,
                    type: object
                description:
                    description: Description is a human-readable summary of what the task does.
                    type: string
                execute_config,omitempty:
                    description: ExecuteConfig defines the configuration for executing prompt or chat model tasks.
                    type: object
                handler:
                    description: Handler determines how the LLM output (or hook) will be interpreted.
                    type: object
                hook,omitempty:
                    description: |-
                        Hook defines an external action to run.
                        Required for Hook tasks, must be nil/omitted for all other types.
                        Example: {type: "send_email", args: {"to": "user@example.com"}}
                    type: object
                id:
                    description: ID uniquely identifies the task within the chain.
                    type: string
                input_var,omitempty:
                    description: |-
                        InputVar is the name of the variable to use as input for the task.
                        Example: "input" for the original input.
                        Each task stores its output in a variable named with it's task id.
                    type: string
                print,omitempty:
                    description: |-
                        Print optionally formats the output for display/logging.
                        Supports template variables from previous task outputs.
                        Optional for all task types except Hook where it's rarely used.
                        Example: "The score is: {{.previous_output}}"
                    type: string
                prompt_template:
                    description: |-
                        PromptTemplate is the text prompt sent to the LLM.
                        It's Required and only applicable for the raw_string type.
                        Supports template variables from previous task outputs.
                        Example: "Rate the quality from 1-10: {{.input}}"
                    type: string
                retry_on_failure,omitempty:
                    description: |-
                        RetryOnFailure sets how many times to retry this task on failure.
                        Applies to all task types including Hooks.
                        Default: 0 (no retries)
                    type: integer
                system_instruction,omitempty:
                    description: SystemInstruction provides additional instructions to the LLM, if applicable system level will be used.
                    type: string
                timeout,omitempty:
                    description: |-
                        Timeout optionally sets a timeout for task execution.
                        Format: "10s", "2m", "1h" etc.
                        Optional for all task types.
                    type: string
                transition:
                    description: Transition defines what to do after this task completes.
                    type: object
                valid_conditions,omitempty:
                    additionalProperties: true
                    description: |-
                        ValidConditions defines allowed values for ConditionKey tasks.
                        Required for ConditionKey tasks, ignored for all other types.
                        Example: {"yes": true, "no": true} for a yes/no condition.
                    type: object
            type: object
    securitySchemes:
        X-API-Key:
            in: header
            name: X-API-Key
            type: apiKey
info:
    title: LLM Backend Management API
    version: "1.0"
openapi: 3.1.0
paths:
    /backend-associations/{backendID}/pools:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: listPoolsForBackend
        parameters:
            - in: path
              name: backendID
              required: true
              schema:
                type: string
    /backend-associations/{poolID}/backends:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Backend'
                    description: OK
                default:
                    description: ""
            summary: listBackends
        parameters:
            - in: path
              name: poolID
              required: true
              schema:
                type: string
    /backend-associations/{poolID}/backends/{backendID}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: removeBackend
        parameters:
            - in: path
              name: poolID
              required: true
              schema:
                type: string
            - in: path
              name: backendID
              required: true
              schema:
                type: string
        post:
            description: Backend association handlers
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: Created
                default:
                    description: ""
            summary: assignBackend
    /backends:
        get:
            description: List all backend connections
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_backendapi_respBackendList'
                    description: OK
                default:
                    description: ""
            summary: list
        post:
            description: Create a new backend connection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_Backend'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Backend'
                    description: Created
                default:
                    description: ""
            summary: create
    /backends/{id}:
        delete:
            description: Delete a backend by ID
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: delete
        get:
            description: Retrieve a backend by ID
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/backendapi_respBackend'
                    description: OK
                default:
                    description: ""
            summary: get
        parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
        put:
            description: Update a backend by ID
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_Backend'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Backend'
                    description: OK
                default:
                    description: ""
            summary: update
    /defaultmodel:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/execapi_DefaultModelResponse'
                    description: OK
                default:
                    description: ""
            summary: defaultModel
    /embed:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/execapi_EmbedRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/execapi_EmbedResponse'
                    description: OK
                default:
                    description: ""
            summary: embed
    /execute:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/execservice_TaskRequest'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/execservice_TaskResponse'
                    description: OK
                default:
                    description: ""
            summary: execute
    /hooks/remote:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_RemoteHook'
                    description: OK
                default:
                    description: ""
            summary: list
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_RemoteHook'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_RemoteHook'
                    description: Created
                default:
                    description: ""
            summary: create
    /hooks/remote/{id}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: delete
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_RemoteHook'
                    description: OK
                default:
                    description: ""
            summary: get
        parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_RemoteHook'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_RemoteHook'
                    description: OK
                default:
                    description: ""
            summary: update
    /model-associations/{modelID}/pools:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: listPoolsForModel
        parameters:
            - in: path
              name: modelID
              required: true
              schema:
                type: string
    /model-associations/{poolID}/models:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Model'
                    description: OK
                default:
                    description: ""
            summary: listModels
        parameters:
            - in: path
              name: poolID
              required: true
              schema:
                type: string
    /model-associations/{poolID}/models/{modelID}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: removeModel
        parameters:
            - in: path
              name: poolID
              required: true
              schema:
                type: string
            - in: path
              name: modelID
              required: true
              schema:
                type: string
        post:
            description: Model association handlers
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: assignModel
    /models:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/backendapi_ListResponse'
                    description: OK
                default:
                    description: ""
            summary: list
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_Model'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Model'
                    description: Created
                default:
                    description: ""
            summary: append
    /models/{model}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: delete
        parameters:
            - in: path
              name: model
              required: true
              schema:
                type: string
    /pool-by-name/{name}:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: getByName
        parameters:
            - in: path
              name: name
              required: true
              schema:
                type: string
    /pool-by-purpose/{purpose}:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: listByPurpose
        parameters:
            - in: path
              name: purpose
              required: true
              schema:
                type: string
    /pools:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: listAll
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_Pool'
                required: true
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Pool'
                    description: Created
                default:
                    description: ""
            summary: create
    /pools/{id}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: delete
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: getByID
        parameters:
            - in: path
              name: id
              required: true
              schema:
                type: string
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runtimetypes_Pool'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimetypes_Pool'
                    description: OK
                default:
                    description: ""
            summary: update
    /providers/{providerType}/config:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: deleteConfig
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/runtimestate_ProviderConfig'
                    description: OK
                default:
                    description: ""
            summary: get
        parameters:
            - in: path
              name: providerType
              required: true
              schema:
                type: string
    /providers/configs:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimestate_ProviderConfig'
                    description: OK
                default:
                    description: ""
            summary: listConfigs
    /queue:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_downloadservice_Job'
                    description: OK
                default:
                    description: ""
            summary: getQueue
    /queue/{model}:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: removeFromQueue
        parameters:
            - in: path
              name: model
              required: true
              schema:
                type: string
    /queue/cancel:
        delete:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                type: string
                    description: OK
                default:
                    description: ""
            summary: cancelDownload
    /queue/inProgress:
        get:
            description: inProgress streams status updates to the client via Server-Sent Events.
            responses:
                "200":
                    content:
                        text/event-stream:
                            schema:
                                type: string
                    description: Server-Sent Events stream
                default:
                    description: ""
            summary: inProgress
    /state:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_runtimestate_LLMState'
                    description: OK
                default:
                    description: ""
            summary: list
    /supported:
        get:
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/array_string'
                    description: OK
                default:
                    description: ""
            summary: supported
    /tasks:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/execapi_taskExec'
                required: true
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/execapi_taskResponse'
                    description: OK
                default:
                    description: ""
            summary: tasks
security:
    - X-API-Key: []
